import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';

//Endpoints
import endPoints from '@services/api';

//Services
import axiosFetcher from '@services/axiosFetcher';

const INITIAL_STATE = {
  showFirstInCategoryCount: [],
  loading: false,
  error: '',
};

//This is an async action
export const getShowFirstInCategoryCount = createAsyncThunk(
  //Action types
  'showFirstInCategoryCount/getShowFirstInCategoryCount',
  async () => {
    const response = await axiosFetcher({
      url: endPoints.admin.discounts.getShowFirstInCategoryCount,
      method: 'get',
      extraHeaders: {
        required_info: 'show_first_in_category_count',
      },
    });

    return response;
  }
);

export const showFirstInCategoryCountReducer = createSlice({
  name: 'showFirstInCategoryCount',
  initialState: INITIAL_STATE,
  //These reducers will handle the global state of the slice. They canÂ´t be async.
  reducers: {},
  //Used to handle the state according to the promise status of the createAsyncThunk function.
  extraReducers: (builder) => {
    //We can add a case for the action type generated by createAsyncThunk
    builder
      //In this case, getShowFirstInCategoryCount will generate 3 action types: getShowFirstInCategoryCount/pending, getShowFirstInCategoryCount/fulfilled, getShowFirstInCategoryCount/rejected. We can add a case for each one of them.
      .addCase(getShowFirstInCategoryCount.pending, (state, action) => {
        state.loading = true;
      })
      .addCase(getShowFirstInCategoryCount.fulfilled, (state, action) => {
        state.loading = false;
        if (action.payload.error) {
          state.error = action.payload.error;
          return;
        }
        state.showFirstInCategoryCount = action.payload.body;
      })
      .addCase(getShowFirstInCategoryCount.rejected, (state, action) => {
        state.loading = false;
        state.error = action.error.message;
      });
  },
});

export const selectShowFirstInCategoryCount = (state) =>
  state.showFirstInCategoryCount;

export default showFirstInCategoryCountReducer.reducer;
